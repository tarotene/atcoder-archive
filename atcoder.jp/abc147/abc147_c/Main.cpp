#include <bits/stdc++.h>
using namespace std;

int bitcnt(int x) {
    if(x == 0) {
        return 0;
    } else {
        return bitcnt(x >> 1) + (x & 1);
    }
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    // Failed to predict input format
    int N = 0;
    cin >> N;

    vector<int> A(N, 0);
    vector<vector<int>> x(N, vector<int>(N, 0));
    vector<vector<int>> y(N, vector<int>(N, 0));
    for (size_t i = 0; i < N; i++)
    {
        cin >> A[i];
        for (size_t j = 0; j < A[i]; j++)
        {
            cin >> x[i][j] >> y[i][j];
            // cout << "x = " << x[i][j] << ", y = " << y[i][j] << endl;
        }
    }

    // cout << "0" << endl;

    int maxh = 0;
    for (size_t k = 0; k < static_cast<long long>((1 << N)); k++)
    {
        int l = 0;
        // checking
        for (size_t i = 0; i < N; i++)
        {
            if((k & (1 << i))) {
                for (size_t j = 0; j < A[i]; j++)
                {
                    l += (y[i][j] ^ ((k >> (x[i][j] - 1)) & 1));
                }
            } 
        }
        // cout << "(l, bitcnt(k)) = " << l << ", " << bitcnt(k) << endl;
        if (l == 0)
        {
            maxh = max(maxh, bitcnt(k));
        }
    }

    cout << maxh << endl;

    return 0;
}
