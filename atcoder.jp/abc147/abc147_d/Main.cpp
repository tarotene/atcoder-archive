#include <bits/stdc++.h>
using namespace std;

const long long MOD = 1000000007;

void solve(long long N, std::vector<long long> A)
{
    const long long MOD = 1000000007;
    long long maxA = *max_element(A.begin(), A.end());
    long long k = floor(log2(maxA)) + 1;

    // cout << "k " << k << endl;

    long long res = 0;
    for (size_t j = 0; j < 60; j++)
    {
        long long n_ones = 0;
        for (size_t i = 0; i < N; i++)
        {
            n_ones += (A[i] >> j) & (1);
        }
        long long res_k = n_ones * (N - n_ones);
        for (size_t l = 0; l < j; l++)
        {
            res_k = (2 * res_k) % MOD;
        }

        res += res_k;
    }

    cout << (res % MOD) << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    scanf("%lld", &N);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++)
    {
        scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
