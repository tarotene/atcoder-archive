#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const long long MOD = 1000000007;

pair<ll, ll> iegcd(const ll a, const ll b, const ll x = 1, const ll u = 0)
{
    if (b == 0)
    {
        return make_pair(a, x);
    }
    else
    {
        return iegcd(b, a % b, u, x - (a / b) * u);
    }
}

ll modpls(const ll a, const ll b, const ll m = MOD)
{
    return (a + b) % m;
}

ll modmin(const ll a, const ll b, const ll m = MOD)
{
    ll res = (a - b) % m;
    if (res < 0)
    {
        return res + m;
    }
    else
    {
        return res;
    }
}

ll modinv(const ll a, const ll m = MOD)
{
    /* m should be a prime */
    pair<ll, ll> res = iegcd(a, m);
    return res.second;
}

ll modmult(const ll a, const ll b, const ll m = MOD)
{
    return ((a % m) * (b % m)) % m;
}

ll moddiv(const ll a, const ll b, const ll m = MOD)
{
    return modmult(a, modinv(b, m), m);
}

ll modfactorial(const ll n, const ll m = MOD)
{
    /* it should be that n >= 1 */
    ll res = 1;
    for (ll i = 2; i <= n; i++)
    {
        res = modmult(i, res, m);
    }
    return res;
}

ll modcombination(const ll n, const ll k, const ll m = MOD)
{
    /* it should be that n >= k >= 1 */
    ll k2 = min(n - k, k);

    ll num = 1;
    for (size_t i = n; i > n - k2; i--)
    {
        num = modmult(num, i, m);
    }

    ll den = 1;
    for (size_t i = k2; i > 1; i--)
    {
        den = modmult(den, i, m);
    }

    return moddiv(num, den, m);
}

ll modpow(const ll a, const ll n, const ll m = MOD)
{
    if (n == 1)
    {
        return a % m;
    }
    else if (n % 2 == 1)
    {
        return modmult(a, modpow(a, n - 1, m), m);
    }
    else
    {
        ll t = modpow(a, n / 2, m);
        return modmult(t, t, m);
    }
}

void solve(long long n, long long a, long long b)
{
    if (n == 2 && a == 1 && b == 1)
    {
        cout << 1 << endl;
    }
    else
    {
        ll res = modpow(2, n, MOD);
        res = modmin(res, 1, MOD);
        res = modmin(res, modcombination(n, a, MOD));
        res = modmin(res, modcombination(n, b, MOD));
        cout << res << endl;
    }
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long n;
    scanf("%lld", &n);
    long long a;
    scanf("%lld", &a);
    long long b;
    scanf("%lld", &b);
    solve(n, a, b);
    return 0;
}
