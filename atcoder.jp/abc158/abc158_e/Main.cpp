#include <bits/stdc++.h>
using namespace std;

long long ctoi(const char c)
{
    return (c - '0');
}

void solve(long long N, long long P, string S)
{
    long long cnt = 0;

    if (P == 2)
    {
        for (long long i = N; i >= 1; i--)
        {
            if (ctoi(S[i]) % 2 == 0)
            {
                cnt += i;
            }
        }
    }
    else if (P == 5)
    {
        for (long long i = N; i >= 1; i--)
        {
            if (ctoi(S[i]) == 0 || ctoi(S[i]) == 5)
            {
                cnt += i;
            }
        }
    }
    else
    {
        long long ten = 1;
        vector<long long> d(N + 2, 0), v(P, 0);
        for (long long i = N; i >= 1; i--)
        {
            long long m = (ctoi(S[i]) * ten) % P;
            d[i] = (d[i + 1] + m) % P;
            ten = (ten * 10) % P;
        }

        for (long long i = 1; i < N + 2; i++)
        {
            v[d[i]]++;
        }

        for (long long i = 0; i < P; i++)
        {
            cnt += v[i] * (v[i] - 1) / 2;
        }
    }

    cout << cnt << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    cin >> N;
    long long P;
    cin >> P;
    string S;
    cin >> S;
    S = "0" + S + "0";
    solve(N, P, S);
    return 0;
}
