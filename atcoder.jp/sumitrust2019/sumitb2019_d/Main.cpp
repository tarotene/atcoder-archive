#include <bits/stdc++.h>
using namespace std;

char itoc(int i)
{
    return static_cast<char>('0' + i);
}

void solve(long long N, string S)
{
    int cnt = 0;
    for (size_t i = 0; i <= 999; i++)
    {
        string T = "000";
        T[2] = itoc(i % 10);
        T[1] = itoc((i / 10) % 10);
        T[0] = itoc((i / 100) % 10);

        // cout << T << endl;
        for (size_t i = 0; i < S.length(); i++)
        {
            if (S[i] == T[0])
            {
                for (size_t j = i + 1; j < S.length(); j++)
                {
                    if (S[j] == T[1])
                    {
                        for (size_t k = j + 1; k < S.length(); k++)
                        {
                            if (S[k] == T[2])
                            {
                                cnt++;
                                break;
                            }
                        }
                        break;
                    }
                }
                break;
            }
        }
    }
    cout << cnt << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    cin >> N;
    string S;
    cin >> S;
    solve(N, S);
    return 0;
}
