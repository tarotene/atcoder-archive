#include <bits/stdc++.h>
using namespace std;

void solve(long long N, std::vector<long long> x, std::vector<long long> y)
{
    long double res = 0.0, dx = 0.0, dy = 0.0;

    for (size_t i = 0; i < N; i++)
    {
        for (size_t j = i + 1; j < N; j++)
        {
            dx = static_cast<long double>(x[i] - x[j]);
            dy = static_cast<long double>(y[i] - y[j]);
            res += sqrt(dx * dx + dy * dy);
        }
    }

    cout << setprecision(10) << 2.0 * res / static_cast<long double>(N) << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    scanf("%lld", &N);
    std::vector<long long> x(N);
    std::vector<long long> y(N);
    for (int i = 0; i < N; i++)
    {
        scanf("%lld", &x[i]);
        scanf("%lld", &y[i]);
    }
    solve(N, std::move(x), std::move(y));
    return 0;
}
