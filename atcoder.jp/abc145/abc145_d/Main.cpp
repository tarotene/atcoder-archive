#include <bits/stdc++.h>
using namespace std;

/* 参考: http://drken1215.hatenablog.com/entry/2018/06/08/210000 */

const long long MAX = 2000000;
const long long MOD = 1000000007;

long long fac[MAX], finv[MAX], inv[MAX];

// テーブルを作る前処理
void COMinit()
{
    fac[0] = fac[1] = 1;
    finv[0] = finv[1] = 1;
    inv[1] = 1;
    for (size_t i = 2; i < MAX; i++)
    {
        fac[i] = fac[i - 1] * i % MOD;
        inv[i] = MOD - inv[MOD % i] * (MOD / i) % MOD;
        finv[i] = finv[i - 1] * inv[i] % MOD;
    }
}

// 二項係数計算
long long COM(const long long n, const long long k)
{
    if (n < k)
        return 0;
    if (n < 0 || k < 0)
        return 0;
    return fac[n] * (finv[k] * finv[n - k] % MOD) % MOD;
}

/* 参考: https://qiita.com/drken/items/3b4fdf0a78e7a138cd9a sec.3-2 */

long long modinv(long long a, long long m)
{
    long long b = m, u = 1, v = 0;
    while (b)
    {
        long long t = a / b;
        a -= t * b;
        swap(a, b);
        u -= t * v;
        swap(u, v);
    }
    u %= m;
    if (u < 0)
        u += m;
    return u;
}

// long long modchoose(const long long m, const long long n, const long long mod)
// {
//     long long res = 1;
//     for (size_t i = m + n; i >= m + n - min(m, n) + 1; i--)
//     {
//         res *= i;
//         res %= mod;
//     }
//     for (size_t i = min(m, n); i >= 2; i--)
//     {
//         res *= modinv(i, mod);
//         res %= mod;
//     }
//     return res;
// }

void solve(long long X, long long Y)
{
    long long res = 0;
    if ((-X + 2 * Y) % 3 != 0 || (2 * X - Y) % 3 != 0)
    {
        res = 0;
    }
    else
    {
        long long m = (-X + 2 * Y) / 3;
        long long n = (2 * X - Y) / 3;

        // 前処理
        COMinit();

        // 計算例
        res = COM(m + n, m);
    }

    cout << res << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long X;
    scanf("%lld", &X);
    long long Y;
    scanf("%lld", &Y);
    solve(X, Y);

    // COMinit();
    // cout << COM(10000, 5000) << endl;

    return 0;
}
