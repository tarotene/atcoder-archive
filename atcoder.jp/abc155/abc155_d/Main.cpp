#include <bits/stdc++.h>
using namespace std;

const long long INF = static_cast<long long>(1e18) + 1LL;

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N = 0, K = 0;
    cin >> N >> K;

    vector<long long> A(N, 0);
    for (size_t i = 0; i < N; i++)
    {
        cin >> A[i];
    }

    sort(A.begin(), A.end());

    long long res = 0;

    long long left = -INF, right = INF;
    while (left + 1 < right)
    {
        long long center = (left + right) / 2, x = 0;
        for (size_t i = 0; i < N; i++)
        {
            if (A[i] < 0)
            {
                long long l = -1, r = N;
                while (l + 1 < r)
                {
                    long long c = (l + r) / 2;
                    if (A[i] * A[c] < center)
                    {
                        r = c;
                    }
                    else
                    {
                        l = c;
                    }
                }
                x += (N - r);
            }
            else
            {
                long long l = -1, r = N;
                while (l + 1 < r)
                {
                    long long c = (l + r) / 2;
                    if (A[i] * A[c] < center)
                    {
                        l = c;
                    }
                    else
                    {
                        r = c;
                    }
                }
                x += r;
            }

            if (A[i] * A[i] < center)
            {
                x--;
            }
        }
        x /= 2;

        if (x < K)
        {
            left = center;
        }
        else
        {
            right = center;
        }
    }

    cout << left << endl;

    return 0;
}
