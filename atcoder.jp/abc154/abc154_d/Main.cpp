#include <bits/stdc++.h>
using namespace std;

void solve(long long N, long long K, std::vector<long long> p)
{
    long long res = 0;
    for (long long i = 0; i < K; i++)
    {
        res += p[i];
    }

    // cout << res << endl;

    long long max = res;
    for (long long i = K; i < N; i++)
    {
        if (res + p[i] - p[i - K] > max)
        {
            max = res + p[i] - p[i - K];
        }
        res += p[i] - p[i - K];
    }

    double num = static_cast<double>(K + max);
    cout << setprecision(10) << (num / 2.0) << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    scanf("%lld", &N);
    long long K;
    scanf("%lld", &K);
    std::vector<long long> p(N);
    for (int i = 0; i < N; i++)
    {
        scanf("%lld", &p[i]);
    }
    solve(N, K, std::move(p));
    return 0;
}
