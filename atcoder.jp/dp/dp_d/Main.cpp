#include <bits/stdc++.h>
using namespace std;

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N = 0, W = 0;
    cin >> N >> W;

    std::vector<long long> w(N + 1, 0);
    std::vector<long long> v(N + 1, 0);

    for (int i = 1; i <= N; i++)
    {
        cin >> w[i] >> v[i];
    }

    vector<vector<long long>> dp(N + 1, vector<long long>(W + 1, 0));

    for (long long i = 1; i <= N; i++)
    {
        for (long long j = 0; j <= W; j++)
        {
            // cout << j << " - w[" << i << "] = " << (int)(j - w[i]) << endl;
            if (j - w[i] < 0)
            {
                // cout << "dp[" << i << "][" << j << "] (" << dp[i][j] << ") <= dp[" << i - 1 << "][" << j << "] (" << dp[i - 1][j] << ")" << endl;
                dp[i][j] = dp[i - 1][j];
            }
            else
            {
                // cout << "dp[" << i << "][" << j << "] (" << dp[i][j] << ") <= max(dp[" << i - 1 << "][" << j - w[i] << "], dp[" << i - 1 << "][" << j << "]) (" << max(dp[i - 1][j - w[i]] + v[i], dp[i - 1][j]) << ")" << endl;
                dp[i][j] = max(dp[i - 1][j - w[i]] + v[i], dp[i - 1][j]);
            }
            // cout << "dp[" << i << "][" << j << "] = " << dp[i][j] << endl;
        }
        // cout << "dp[" << i << "][W] = " << dp[i][W] << endl;
    }

    cout << dp[N][W] << endl;

    return 0;
}
