#include <bits/stdc++.h>
using namespace std;

void solve(long long N, std::vector<long long> a, std::vector<long long> b, std::vector<long long> c)
{
    long long dp[N + 1][3] = {{0}};
    for (size_t i = 1; i <= N; i++)
    {
        dp[i][0] = max(dp[i - 1][1] + a[i], dp[i - 1][2] + b[i]);
        dp[i][1] = max(dp[i - 1][2] + b[i], dp[i - 1][0] + c[i]);
        dp[i][2] = max(dp[i - 1][0] + c[i], dp[i - 1][1] + a[i]);
    }
    cout << max(max(dp[N][0], dp[N][1]), dp[N][2]) << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    long long N;
    scanf("%lld", &N);
    std::vector<long long> a(N + 1, 0);
    std::vector<long long> b(N + 1, 0);
    std::vector<long long> c(N + 1, 0);
    for (int i = 1; i <= N; i++)
    {
        scanf("%lld", &a[i]);
        scanf("%lld", &b[i]);
        scanf("%lld", &c[i]);
    }
    solve(N, std::move(a), std::move(b), std::move(c));
    return 0;
}
